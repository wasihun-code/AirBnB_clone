#!/usr/bin/python3
"""A class that defines all common attributes for other class."""


import uuid
from datetime import datetime


class BaseModel():
    """Documentation for BaseModel class."""

    def __init__(self, *args, **kwargs):
        %Y-%m-%dT%H:%M:%S.%f
        if (kwargs != {} and kwargs is not None):
            for key, value in kwargs.items():
                if key == 'created_at' or key == 'updated_at':
                    vals = datetime.strptime(value, "%Y-%m-%dT%H:%M:%S.%f")
                    setattr(self, key, vals)
                elif key == "__class__":
                    continue
                else:
                    setattr(self, key, value)

    def __str__(self):
        cls = self.__class__.__name__
        return '[{}] ({}) {}'.format(cls, self.id, self.__dict__)

    def save(self):
        updated_at = datetime.now()
        pass

    def to_dict(self):
        a_dict = self.__dict__.copy()
        a_dict["created_at"] = str(self.created_at.isoformat())
        a_dict["updated_at"] = str(self.updated_at.isoformat())
        a_dict["__class__"] = self.__class__.__name__
        return a_dict
